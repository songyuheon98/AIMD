# -*- mode: python ; coding: utf-8 -*-

from PyInstaller.utils.hooks import collect_dynamic_libs
from PyInstaller.utils.hooks import collect_all
import sys; sys.setrecursionlimit(sys.getrecursionlimit() * 5)

block_cipher = None

# Collect data, binaries and hiddenimports for win10toast
win10toast_data, win10toast_binaries, win10toast_hiddenimports = collect_all('win10toast')

a = Analysis(
    ['Malware_DT.py'],
    pathex=[],
    binaries=collect_dynamic_libs("capstone") + win10toast_binaries,
    datas=win10toast_data + [('model_weights15.h5', '.')],
    hiddenimports=['plyer.platforms.win.notification', 'capstone.evm'] + win10toast_hiddenimports,
    hookspath=[],
    hooksconfig={},
    runtime_hooks=[],
    excludes=[],
    win_no_prefer_redirects=False,
    win_private_assemblies=False,
    cipher=block_cipher,
    noarchive=False,
)
pyz = PYZ(a.pure, a.zipped_data, cipher=block_cipher)

exe = EXE(
    pyz,
    a.scripts,
    a.binaries,
    a.zipfiles,
    a.datas,
    [],
    name='Malware_DT.exe',
    debug=False,
    bootloader_ignore_signals=False,
    strip=False,
    upx=True,
    upx_exclude=[],
    runtime_tmpdir=None,
    console=True,
    disable_windowed_traceback=False,
    argv_emulation=False,
    target_arch=None,
    codesign_identity=None,
    entitlements_file=None,
)